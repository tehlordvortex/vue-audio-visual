{"version":3,"sources":["webpack:///webpack/bootstrap dfb75da78e2e20f6ff55","webpack:///./src/components/AvBase.js","webpack:///./src/components/AvBars.js","webpack:///./src/components/AvLine.js","webpack:///./src/components/AvCircle.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","AvBase","props","audioSrc","type","String","default","audioElement","HTMLAudioElement","audioControls","Boolean","corsAnonym","audioClass","canvWidth","Number","canvHeight","canvClass","canvTop","canvFillColor","Array","enabled","render","h","mounted","this","createHTMLElements","setAnalyser","mainLoop","methods","audio","document","createElement","audioDiv","canv","canvDiv","setAttribute","crossOrigin","appendChild","$el","insertBefore","ctx","getContext","AudioContext","src","createMediaElementSource","analyser","createAnalyser","connect","fftSize","destination","fillGradient","colorsArray","w","gradient","createLinearGradient","offset","forEach","color","addColorStop","length","data","nextAnimationFrame","watch","newVal","cancelAnimationFrame","components_AvBars","mixins","barWidth","barSpace","barColor","capsHeight","capsDropSpeed","capsColor","brickHeight","brickSpace","symmetric","caps","apply","map","_this","frqBits","frequencyBinCount","Uint8Array","step","Math","round","barFill","isArray","x","getByteFrequencyData","_fillCanvasBG","_","index","bits","slice","reduce","v","t","barHeight","_drawCap","fillStyle","_drawBar","requestAnimationFrame","clearRect","fillRect","barX","_drawBrickBar","_symAlign","b","barwidth","barY","cap","y","capY","components_AvLine","lineWidth","lineColor","_setCanvas","strokeStyle","beginPath","reverse","moveTo","_drawLine","lineTo","stroke","canvColor","components_AvCircle","radius","lineSpace","outlineColor","outlineWidth","barLength","progress","progressWidth","progressColor","progressClockwise","outlineMeterSpace","playtime","playtimeFont","playtimeColor","rotateGraph","rotateSpeed","rotate","cx","cy","r","arcStep","ceil","PI","barLen","angle","_rotate","_drawOutline","_drawProgress","_drawPlaytime","_setBarColor","blen","cos","sin","elapsed","currentTime","duration","angleEnd","arc","floor","sec","text","tsizew","measureText","width","font","fillText","parseInt","_this2","createRadialGradient","AVPlugin","Vue","window","webkitAudioContext","mozAudioContext","msAudioContext","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","component","__webpack_exports__"],"mappings":"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","file":"vue-audio-visual.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"lVK7\");\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap dfb75da78e2e20f6ff55","/**\n * Mixin component with base and common properties and functions.\n */\n\n/**\n * Base properties common for the audio-visual components\n */\nconst props = {\n  /**\n   * prop: 'audio-src'\n   * Audio element src attribute. When provided creates audio element\n   */\n  audioSrc: {\n    type: String,\n    default: null\n  },\n  audioElement: {\n    type: HTMLAudioElement,\n    default: null\n  },\n  /**\n   * prop: 'audio-controls'\n   * Audio element controls attribute. When provided should\n   * display audio element with controls\n   */\n  audioControls: {\n    type: Boolean,\n    default: true\n  },\n  /**\n   * prop: 'cors-anonym'\n   * CORS requests for this element will not have the credentials flag set.\n   * Set crossOrigin property of audio element to 'anonymous'.\n   * Default: null\n   */\n  corsAnonym: {\n    type: Boolean,\n    default: false\n  },\n  /**\n   * prop: 'audio-class'\n   * Audio element css class name.\n   */\n  audioClass: {\n    type: String,\n    default: null\n  },\n  /**\n   * prop: 'canv-width'\n   * Canvas element width. Default 300\n   */\n  canvWidth: {\n    type: Number,\n    default: 300\n  },\n  /**\n   * prop: 'canv-height'\n   * Canvas element height. Default 80\n   */\n  canvHeight: {\n    type: Number,\n    default: 80\n  },\n  /**\n   * prop: 'canv-class'\n   * Canvas element css class name.\n   */\n  canvClass: {\n    type: String,\n    default: null\n  },\n  /**\n   * prop: 'canv-top'\n   * Canvas element position on top relatively to audio element.\n   * Default: false\n   */\n  canvTop: {\n    type: Boolean,\n    default: false\n  },\n  /**\n   * prop: 'canv-fill-color'\n   * Canvas fill background color. Can be string RGB color or canvas gradients array.\n   * Default is transperent.\n   */\n  canvFillColor: {\n    type: [String, Array],\n    default: null\n  },\n  enabled: {\n    type: Boolean,\n    default: true\n  }\n}\n\nconst data = function () {\n  return {\n    nextAnimationFrame: null\n  }\n}\n\nconst watch = {\n  enabled: function (newVal) {\n    if (newVal) this.mainLoop()\n    else cancelAnimationFrame(this.nextAnimationFrame)\n  }\n}\n\nconst methods = {\n  /**\n   * Create audio and canvas elements and insert in the HTML template.\n   * Using document.createElement to avoid Vue virtual DOM re-rendering\n   * which and lead to infinit loops.\n   */\n  createHTMLElements: function () {\n    const audio = this.audioElement || document.createElement('audio')\n    const audioDiv = document.createElement('div')\n    const canv = document.createElement('canvas')\n    const canvDiv = document.createElement('div')\n\n    if (!this.audioElement) {\n      audio.setAttribute('src', this.audioSrc)\n      if (this.audioControls) audio.setAttribute('controls', true)\n      if (this.audioClass) audio.setAttribute('class', this.audioClass)\n      if (this.corsAnonym) audio.crossOrigin = 'anonymous'\n      audioDiv.appendChild(audio)\n      this.$el.appendChild(audioDiv)\n    }\n\n    if (this.canvClass) canv.setAttribute('class', this.canvClass)\n    if (this.canvWidth) canv.setAttribute('width', this.canvWidth)\n    if (this.canvHeight) canv.setAttribute('height', this.canvHeight)\n    canvDiv.appendChild(canv)\n\n    if (this.canvTop && !this.audioElement) {\n      this.$el.insertBefore(canvDiv, audioDiv)\n    } else {\n      this.$el.appendChild(canvDiv)\n    }\n    this.ctx = canv.getContext('2d')\n    this.audio = audio\n  },\n  /**\n   * Set audio context analyser.\n   */\n  setAnalyser: function () {\n    const ctx = new AudioContext()\n    const src = ctx.createMediaElementSource(this.audio)\n    this.analyser = ctx.createAnalyser()\n\n    src.connect(this.analyser)\n    this.analyser.fftSize = this.fftSize\n    this.analyser.connect(ctx.destination)\n  },\n  /**\n   * Canvas gradient. Vertical, from top down\n   */\n  fillGradient: function (colorsArray) {\n    const w = this.canvWidth\n    const h = this.canvHeight\n    const gradient = this.ctx.createLinearGradient(w / 2, 0, w / 2, h)\n    let offset = 0\n    colorsArray.forEach(color => {\n      gradient.addColorStop(offset, color)\n      offset += (1 / colorsArray.length)\n    })\n    return gradient\n  }\n}\n\nexport default {\n  props,\n  render: h => h('div'),\n  mounted () {\n    this.createHTMLElements()\n    this.setAnalyser()\n    if (this.enabled) this.mainLoop()\n  },\n  methods,\n  data,\n  watch\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/AvBase.js","import BaseMixin from './AvBase'\n/**\n * Component props Object\n */\nconst props = {\n  /**\n   * prop: 'bar-width'\n   * Width of the bar in pixels.\n   * Default: 5\n   */\n  barWidth: {\n    type: Number,\n    default: 5\n  },\n  /**\n   * prop: 'bar-space'\n   * Space between bars.\n   * Default: 1\n   */\n  barSpace: {\n    type: Number,\n    default: 1\n  },\n  /**\n   * prop: 'bar-color'\n   * Bar fill color. Can be string RGB color or canvas gradients array.\n   */\n  barColor: {\n    type: [String, Array],\n    default: '#0A0AFF'\n  },\n  /**\n   * prop: 'caps-height'\n   * Create caps on bars with given height in pixels.\n   * If zero caps then skip creating bars.\n   * Default: 0\n   */\n  capsHeight: {\n    type: Number,\n    default: 0\n  },\n  /**\n   * prop: 'caps-drop-speed'\n   * Caps drop down animation speed.\n   * Default: 0.9\n   */\n  capsDropSpeed: {\n    type: Number,\n    default: 0.9\n  },\n  /**\n   * prop: 'caps-color'\n   * Caps rectangles RGB color.\n   */\n  capsColor: {\n    type: String,\n    default: '#A0A0FF'\n  },\n  /**\n   * prop: 'brick-height'\n   * Draw bar as bricks with set height.\n   */\n  brickHeight: {\n    type: Number,\n    default: 0\n  },\n  /**\n   * prop: 'brick-space'\n   * Space between bricks.\n   */\n  brickSpace: {\n    type: Number,\n    default: 1\n  },\n  /**\n   * prop: 'symmetric'\n   * Draw bars symmetric to canvas vertical center\n   * Default: false\n   */\n  symmetric: {\n    type: Boolean,\n    default: false\n  },\n  /**\n   * prop: 'fft-size'\n   * Represents the window size in samples that is used when performing\n   * a Fast Fourier Transform (FFT) to get frequency domain data.\n   * Must be power of 2 between 2^5 and 2^15\n   * Default: 1024\n   */\n  fftSize: {\n    type: Number,\n    default: 1024\n  }\n}\n\n/**\n * Component AvBars\n */\nconst AvBars = {\n  name: 'av-bars',\n  mixins: [ BaseMixin ],\n  props,\n  data () {\n    return {\n      audio: null,\n      analyser: null,\n      ctx: null,\n      caps: Array.apply(null, Array(this.fftSize / 2)).map(() => 0)\n    }\n  },\n  methods: {\n    /**\n     * Main loop. Draws visualization.\n     */\n    mainLoop: function () {\n      const frqBits = this.analyser.frequencyBinCount\n      const data = new Uint8Array(frqBits)\n      const barWidth = this.barWidth >= this.canvWidth ? this.canvWidth : this.barWidth\n      const step = Math.round((barWidth + this.barSpace) / frqBits * this.canvWidth)\n      const barFill = Array.isArray(this.barColor)\n        ? this.fillGradient(this.barColor)\n        : this.barColor\n      let x = 0\n\n      this.analyser.getByteFrequencyData(data)\n      this._fillCanvasBG()\n\n      data.forEach((_, index) => {\n        if (index % step) return\n        const bits = Math.round(data.slice(index, index + step)\n          .reduce((v, t) => t + v, 0) / step)\n        const barHeight = bits / 255 * this.canvHeight\n        if (this.capsHeight) {\n          this._drawCap(index, barWidth, x, bits)\n        }\n        this.ctx.fillStyle = barFill\n        this._drawBar(barWidth, barHeight, x)\n        x += barWidth + this.barSpace\n      })\n      this.nextAnimationFrame = requestAnimationFrame(this.mainLoop)\n    },\n    /**\n     * Canvas background fill\n     * @private\n     */\n    _fillCanvasBG: function () {\n      const w = this.canvWidth\n      const h = this.canvHeight\n      this.ctx.clearRect(0, 0, w, h)\n      if (this.canvFillColor) {\n        this.ctx.fillStyle = Array.isArray(this.canvFillColor)\n          ? this.fillGradient(this.canvFillColor)\n          : this.canvFillColor\n        this.ctx.fillRect(0, 0, w, h)\n      }\n    },\n    /**\n     * Draw bar. Solid bar or brick bar.\n     * @private\n     */\n    _drawBar: function (barWidth, barHeight, barX) {\n      if (this.brickHeight) {\n        this._drawBrickBar(barWidth, barHeight, barX)\n      } else {\n        this.ctx.fillRect(\n          barX, this.canvHeight - barHeight - this._symAlign(barHeight),\n          barWidth, barHeight\n        )\n      }\n    },\n    /**\n     * Draw bricks bar.\n     * @private\n     */\n    _drawBrickBar: function (barWidth, barHeight, barX) {\n      for (let b = 0; b < barHeight; b += this.brickHeight + this.brickSpace) {\n        this.ctx.fillRect(\n          barX, this.canvHeight - barHeight + b - this._symAlign(barHeight),\n          barWidth, this.brickHeight\n        )\n      }\n    },\n    /**\n     * Draw cap for each bar and animate caps falling down.\n     * @private\n     */\n    _drawCap: function (index, barwidth, barX, barY) {\n      const cap = this.caps[index] <= barY\n        ? barY\n        : this.caps[index] - this.capsDropSpeed\n      const y = (cap / 255.0 * this.canvHeight)\n      const capY = this.canvHeight - y - this.capsHeight - this._symAlign(y)\n      this.ctx.fillStyle = this.capsColor\n      this.ctx.fillRect(barX, capY, barwidth, this.capsHeight)\n      if (this.symmetric) {\n        this.ctx.fillRect(\n          barX, this.canvHeight - capY - this.capsHeight,\n          barwidth, this.capsHeight)\n      }\n      this.caps[index] = cap\n    },\n    /**\n     * Shift for symmetric alignment\n     * @private\n     */\n    _symAlign: function (barHeight) {\n      return this.symmetric ? ((this.canvHeight - barHeight) / 2) : 0\n    }\n  }\n}\n\nexport default AvBars\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/AvBars.js","import BaseMixin from './AvBase'\n\n/**\n * Component props\n */\nconst props = {\n  /**\n   * prop: 'line-width'\n   * Draw line width in px\n   */\n  lineWidth: {\n    type: Number,\n    default: 2\n  },\n  /**\n   * prop: 'line-color'\n   * Draw line color or gradient array\n   */\n  lineColor: {\n    type: [String, Array],\n    default: '#9F9'\n  },\n  /**\n   * prop: 'fft-size'\n   * Represents the window size in samples that is used when performing\n   * a Fast Fourier Transform (FFT) to get frequency domain data.\n   * Must be power of 2 between 2^5 and 2^15\n   * Default: 128\n   */\n  fftSize: {\n    type: Number,\n    default: 128\n  }\n}\n\n/**\n * Component AvLine\n */\nconst AvLine = {\n  name: 'av-line',\n  mixins: [ BaseMixin ],\n  props,\n  data () {\n    return {\n      audio: null,\n      analyser: null,\n      ctx: null\n    }\n  },\n  methods: {\n    /**\n     * Main loop. Draws visualization.\n     */\n    mainLoop: function () {\n      const frqBits = this.analyser.frequencyBinCount\n      const step = (this.canvWidth / 2.0) / frqBits\n      const data = new Uint8Array(frqBits)\n      let x = 0\n\n      this._setCanvas()\n      this.analyser.getByteFrequencyData(data)\n\n      this.ctx.lineWidth = this.lineWidth\n      this.ctx.strokeStyle = Array.isArray(this.lineColor)\n        ? this.fillGradient(this.lineColor)\n        : this.lineColor\n      this.ctx.beginPath()\n\n      data.reverse()\n      this.ctx.moveTo(x, this.canvHeight / 2)\n      x = this._drawLine(data, x, step)\n      data.reverse()\n      x = this._drawLine(data, x, step)\n      this.ctx.lineTo(+this.canvWidth, this.canvHeight / 2)\n      this.ctx.stroke()\n\n      this.nextAnimationFrame = requestAnimationFrame(this.mainLoop)\n    },\n    /**\n     * Canvas clear background fill\n     * @private\n     */\n    _setCanvas: function () {\n      const w = this.canvWidth\n      const h = this.canvHeight\n      const canvColor = this.canvFillColor\n      const gradient = this.ctx.createLinearGradient(w / 2, 0, w / 2, h)\n      let offset = 0\n      this.ctx.clearRect(0, 0, w, h)\n\n      if (!canvColor) return\n\n      if (Array.isArray(canvColor)) {\n        canvColor.forEach(color => {\n          gradient.addColorStop(offset, color)\n          offset += (1 / canvColor.length)\n        })\n        this.ctx.fillStyle = gradient\n      } else {\n        this.ctx.fillStyle = canvColor\n      }\n      this.ctx.fillRect(0, 0, w, h)\n    },\n    /**\n     * Draw line and return last X\n     * @private\n     */\n    _drawLine: function (data, x, step) {\n      const h = +this.canvHeight\n      let y = 0\n      data.forEach((v, i) => {\n        // (h / 2) - v / 255 * (h / 2)\n        y = h * (255 - v) / 510\n        if (i % 2) y = h - y\n        this.ctx.lineTo(x, y)\n        x += step\n      })\n      return x\n    }\n  }\n}\n\nexport default AvLine\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/AvLine.js","import BaseMixin from './AvBase'\n\n/**\n * Component props\n */\nconst props = {\n  /**\n   * prop: 'fft-size'\n   * Represents the window size in samples that is used when performing\n   * a Fast Fourier Transform (FFT) to get frequency domain data.\n   * Must be power of 2 between 2^5 and 2^15\n   * Default: 1024\n   */\n  fftSize: {\n    type: Number,\n    default: 1024\n  },\n  /**\n   * prop: 'canv-width'\n   * Canvas element width. Default 100\n   */\n  canvWidth: {\n    type: Number,\n    default: 100\n  },\n  /**\n   * prop: 'canv-height'\n   * Canvas element height. Default 100\n   */\n  canvHeight: {\n    type: Number,\n    default: 100\n  },\n  /**\n   * prop: 'radius'\n   * Set cercle radius. If zero will be calculated from canvas\n   * width: (canv-width / 2) * 0.7\n   * Default: 0\n   */\n  radius: {\n    type: Number,\n    default: 0\n  },\n  /**\n   * prop: 'line-width'\n   * Frequency bit line width to draw.\n   */\n  lineWidth: {\n    type: Number,\n    default: 1\n  },\n  /**\n   * prop: 'line-space'\n   * Space between lines to draw.\n   */\n  lineSpace: {\n    type: Number,\n    default: 1\n  },\n  /**\n   * prop: 'outline-color'\n   * Outline (contour) style RGB color.\n   * Default: #00f\n   */\n  outlineColor: {\n    type: String,\n    default: '#0000FF'\n  },\n  /**\n   * prop: 'outline-width'\n   * Outline (contour) line width. Float value.\n   * Default: 0.3\n   */\n  outlineWidth: {\n    type: Number,\n    default: 0.3\n  },\n  /**\n   * prop: 'bar-width'\n   * Frequency graph bar width.\n   */\n  barWidth: {\n    type: Number,\n    default: 1\n  },\n  /**\n   * prop: 'bar-length'\n   * Frequency graph bar length.\n   * Default is a difference between radius and canvas width.\n   */\n  barLength: {\n    type: Number,\n    default: 0\n  },\n  /**\n   * prop: 'bar-color'\n   * Bar style RGB color or radient gradient when array.\n   * Default: [ #FFFFFF, #0000FF ]\n   */\n  barColor: {\n    type: [String, Array],\n    default: () => [ '#FFFFFF', '#0000FF' ]\n  },\n  /**\n   * prop: 'progress'\n   * Draw play progress meter.\n   * Default: false\n   */\n  progress: {\n    type: Boolean,\n    default: true\n  },\n  /**\n   * prop: 'progress-width'\n   * Progress meter width.\n   * Default: 1\n   */\n  progressWidth: {\n    type: Number,\n    default: 1\n  },\n  /**\n   * prop: 'progress-color'\n   * Progress meter color.\n   * Default: 1\n   */\n  progressColor: {\n    type: String,\n    default: '#0000FF'\n  },\n  /**\n   * prop: 'progress-clockwise'\n   * Progress meter arc draw direction. Default clockwise\n   * Default: true\n   */\n  progressClockwise: {\n    type: Boolean,\n    default: false\n  },\n  /**\n   * prop: 'outline-meter-space'\n   * Space between outline and progress meter.\n   * Default: 2\n   */\n  outlineMeterSpace: {\n    type: Number,\n    default: 3\n  },\n  /**\n   * prop: 'playtime'\n   * Draw playtime text in the center of the circle.\n   * Default: false\n   */\n  playtime: {\n    type: Boolean,\n    default: false\n  },\n  /**\n   * prop: 'playtime-font'\n   * Played time print font.\n   * Default: '14px Monaco'\n   */\n  playtimeFont: {\n    type: String,\n    default: '14px Monaco'\n  },\n  /**\n  * prop: 'playtime-color'\n  * Played time font color.\n  * Default: '#00f'\n  */\n  playtimeColor: {\n    type: String,\n    default: '#00f'\n  },\n  /**\n   * prop: 'rotate-graph'\n   * Rotate graph clockwise enable.\n   * Default: false\n   */\n  rotateGraph: {\n    type: Boolean,\n    default: false\n  },\n  /**\n   * prop: 'rotate-speed'\n   * Rotate graph speed.\n   * Default: 0.001\n   */\n  rotateSpeed: {\n    type: Number,\n    default: 0.001\n  }\n}\n\n/**\n * Component AvCircle\n */\nconst AvCircle = {\n  name: 'av-circle',\n  mixins: [ BaseMixin ],\n  props,\n  data () {\n    return {\n      rotate: 1.5,\n      audio: null,\n      analyser: null,\n      ctx: null\n    }\n  },\n  methods: {\n    /**\n     * Main loop. Draws visualization.\n     */\n    mainLoop: function () {\n      const cx = this.canvWidth / 2 // center X\n      const cy = this.canvHeight / 2 // center Y\n      const r = this.radius ? this.radius : Math.round(this.canvWidth / 2 * 0.7)\n      const lineWidth = this.lineWidth\n      const lineSpace = this.lineSpace\n      const arcStep = Math.ceil(lineWidth + lineSpace)\n      const frqBits = this.analyser.frequencyBinCount\n      const data = new Uint8Array(frqBits)\n      const step = ((lineWidth + lineSpace) / data.length) * (2 * Math.PI)\n      const barLen = this.barLength > 0\n        ? this.barLength\n        : (this.canvWidth / 2) - r\n      let angle = Math.PI * this._rotate() // start from top\n\n      this._setCanvas()\n      this.analyser.getByteFrequencyData(data)\n\n      // contour outline\n      if (this.outlineWidth > 0) {\n        this._drawOutline(r, cx, cy)\n      }\n\n      // draw play progress meter\n      if (this.progress) {\n        this._drawProgress(r, cx, cy)\n      }\n\n      // draw played time\n      if (this.playtime) {\n        this._drawPlaytime(cx, cy)\n      }\n\n      // circle bar lines\n      this.ctx.lineWidth = this.barWidth\n      this.ctx.strokeStyle = this._setBarColor(cx, cy)\n\n      data.forEach((_, index) => {\n        angle += step\n        if (index % arcStep) {\n          return\n        }\n        const bits = Math.round(data.slice(index, index + arcStep)\n          .reduce((v, t) => t + v, 0) / arcStep)\n\n        const blen = r + (bits / 255.0 * barLen)\n        this.ctx.beginPath()\n        this.ctx.moveTo(r * Math.cos(angle) + cx, r * Math.sin(angle) + cy)\n        this.ctx.lineTo(blen * Math.cos(angle) + cx, blen * Math.sin(angle) + cy)\n        this.ctx.stroke()\n      })\n\n      this.nextAnimationFrame = requestAnimationFrame(this.mainLoop)\n    },\n    /**\n     * Canvas clear background fill\n     * @private\n     */\n    _setCanvas: function () {\n      this.ctx.clearRect(0, 0, this.canvWidth, this.canvHeight)\n\n      if (!this.canvFillColor) return\n\n      this.ctx.fillStyle = Array.isArray(this.canvFillColor)\n        ? this.fillGradient(this.canvFillColor)\n        : this.canvFillColor\n      this.ctx.fillRect(0, 0, this.canvWidth, this.canvHeight)\n    },\n    /**\n     * Draw play progress meter\n     */\n    _drawProgress: function (r, cx, cy) {\n      const elapsed = this.audio.currentTime / this.audio.duration * 2 * Math.PI\n      const angleEnd = Math.PI * 1.5 + elapsed\n\n      if (!elapsed) return\n\n      this.ctx.lineWidth = this.progressWidth\n      this.ctx.strokeStyle = this.progressColor\n\n      this.ctx.beginPath()\n      this.ctx.arc(cx, cy, r - this.outlineWidth - this.outlineMeterSpace,\n        1.5 * Math.PI, angleEnd, this.progressClockwise)\n      this.ctx.stroke()\n    },\n    /**\n     * Draw outline circle\n     */\n    _drawOutline: function (r, cx, cy) {\n      this.ctx.beginPath()\n      this.ctx.strokeStyle = this.outlineColor\n      this.ctx.lineWidth = this.outlineWidth\n      this.ctx.arc(cx, cy, r, 0, 2 * Math.PI)\n      this.ctx.stroke()\n    },\n    /**\n     * Draw played time\n     */\n    _drawPlaytime: function (cx, cy) {\n      const m = Math.floor(this.audio.currentTime / 60)\n      const sec = Math.floor(this.audio.currentTime) % 60\n      const s = sec < 10 ? `0${sec}` : `${sec}`\n      const text = `${m}:${s}`\n      const tsizew = Math.ceil(this.ctx.measureText(text).width)\n\n      this.ctx.font = this.playtimeFont\n      this.ctx.fillStyle = this.playtimeColor\n      this.ctx.fillText(text, cx - Math.round(tsizew / 2), cy + 0.25 * parseInt(this.playtimeFont))\n    },\n    /**\n     * If rotate is enabled will return rotated angle\n     */\n    _rotate: function () {\n      if (this.rotateGraph) {\n        this.rotate = this.rotate === 3.5 ? 1.5 : this.rotate + this.rotateSpeed\n      } else {\n        this.rotate = 1.5\n      }\n      return this.rotate\n    },\n    /**\n     * Set bars color.\n     */\n    _setBarColor: function (cx, cy) {\n      if (!Array.isArray(this.barColor)) {\n        return this.barColor\n      }\n      const gradient = this.ctx.createRadialGradient(cx, cy, this.canvWidth / 2, cx, cy, 0)\n      let offset = 0\n\n      this.barColor.forEach(color => {\n        gradient.addColorStop(offset, color)\n        offset += (1 / this.barColor.length)\n      })\n      return gradient\n    }\n  }\n}\n\nexport default AvCircle\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/AvCircle.js","import AvBars from './components/AvBars'\nimport AvLine from './components/AvLine'\nimport AvCircle from './components/AvCircle'\n\nconst AVPlugin = {}\n\nAVPlugin.install = function (Vue) {\n  // browsers compatibility\n  window.AudioContext = window.AudioContext || window.webkitAudioContext || window.mozAudioContext || window.msAudioContext\n  window.requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame\n  // Components\n  Vue.component(AvBars.name, AvBars)\n  Vue.component(AvLine.name, AvLine)\n  Vue.component(AvCircle.name, AvCircle)\n}\n\nexport default AVPlugin\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js"],"sourceRoot":""}